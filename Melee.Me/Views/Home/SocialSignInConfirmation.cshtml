@model Melee.Me.Models.MeleeModel

@using LinqToTwitter
@{
    ViewBag.Title = "SocialSignInConfirmation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Prepare to Melee</h2>

<div class="battleField">
    <div id="userContainer" class="userContainer">
        <a href="@Url.Action("MyProfile", "Home", new { twitterUserId = @Model.Challenger.TwitterUserId })">
            <img id="challengerImageUrl" src=@Model.Challenger.ImageUrl class="img-thumbnail" alt="your twitter icon"/>
        </a>
        <div id="challengerScreenName">@Model.Challenger.ScreenName</div>
    </div>

    <div class="spacer">VS.</div>

    <div id="competitorContainer" class="competitorContainer">
        <img id="competitorImageUrl" src=@Model.Competitor.ImageUrl class="img-thumbnail" alt="twitter icon"/>
        <div id="competitorScreenName">@Model.Competitor.ScreenName</div>
        <div id="competitorUserId" style="visibility: hidden">@Model.Competitor.TwitterUserId</div>
    </div>
    <div id="meleeProgress"></div>
</div>


<div class="actionControls">
    <button type="submit" name="NewOpponent" id="NewOpponent" value="NewOpponent" title="New Opponent">New</button>
    <button type="submit" name="Melee" id="Melee" value="Melee" title="Melee">Melee</button>
</div>


<script>
    $('#NewOpponent').click(function () {
        $("#meleeProgress").empty();
        
        $.ajax({
            url: '/Home/GetNewCompetitor',
            type: 'POST',
            data: { twitterUserId: '@Model.Challenger.TwitterUserId' },
            success: function (result) {
                $('#competitorImageUrl').attr("src", result.ImageUrl);
                $('#competitorScreenName').html(result.ScreenName);
                $('#competitorMeleeTotal').html("Melee's: " + (result.Stats.BattleWins + result.Stats.BattleLosses));
                $('#competitorMeleeWins').html("Wins: " + result.Stats.BattleWins);
                $('#competitorMeleeLosses').html("Losses: " + result.Stats.BattleLosses);
                $('#competitorUserId').html(result.TwitterUserId);
            },
            error: function (jqXHR, exception) {
                if (jqXHR.status === 0) {
                    window.location.href = "~/Views/Shared/Error";
                }
            },
            complete: function () {
                $('#spinnerBank').hide();
            }
        });

        return false;
    });

    //$('#Melee').click(function () {
    //    var competitorScreenName = "";
    //    window.location.href = "/Melee/MeleeMe";

    //});
    
    $(function () {
        // Declare a proxy to reference the hub. 
        var chat = $.connection.meleeHub;
        // Create a function that the hub can call to broadcast messages.
        chat.client.broadcastMessage = function (statusUpdate) {
            // Add the message to the page. 
            $('#meleeProgress').append('<li>' + statusUpdate + '</li>');
        };

        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#Melee').click(function () {
                $("#meleeProgress").empty();
                // Call the Send method on the hub. 
                chat.server.send('@Model.Challenger.TwitterUserId', $('#competitorUserId').text());
            });
        });
    });


</script>
